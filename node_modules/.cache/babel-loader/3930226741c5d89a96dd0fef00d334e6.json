{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport { useCustomFetch } from \"./useCustomFetch\";\nexport function usePaginatedTransactions() {\n  _s();\n\n  const {\n    fetchWithCache,\n    loading\n  } = useCustomFetch();\n  const [paginatedTransactions, setPaginatedTransactions] = useState(null);\n  const fetchAll = useCallback(async () => {\n    const response = await fetchWithCache(\"paginatedTransactions\", {\n      page: paginatedTransactions === null ? 0 : paginatedTransactions.nextPage\n    });\n    console.log(caches.current);\n    setPaginatedTransactions(previousResponse => {\n      if (response === null || previousResponse === null) {\n        return response;\n      }\n\n      if (previousResponse !== null) {\n        response.data = previousResponse.data.concat(response.data);\n      }\n\n      return {\n        data: response.data,\n        nextPage: response.nextPage\n      };\n    });\n  }, [fetchWithCache, paginatedTransactions]);\n  const invalidateData = useCallback(() => {\n    setPaginatedTransactions(null);\n  }, []);\n  return {\n    data: paginatedTransactions,\n    loading,\n    fetchAll,\n    invalidateData\n  };\n}\n\n_s(usePaginatedTransactions, \"q7mzu0dFDpR8VzAjEHyrhILBkS8=\", false, function () {\n  return [useCustomFetch];\n});","map":{"version":3,"names":["useCallback","useState","useCustomFetch","usePaginatedTransactions","fetchWithCache","loading","paginatedTransactions","setPaginatedTransactions","fetchAll","response","page","nextPage","console","log","caches","current","previousResponse","data","concat","invalidateData"],"sources":["/Users/jareddiaz/Downloads/ramp-fe-challenge/src/hooks/usePaginatedTransactions.ts"],"sourcesContent":["import { useCallback, useState } from \"react\"\nimport { PaginatedRequestParams, PaginatedResponse, Transaction } from \"../utils/types\"\nimport { PaginatedTransactionsResult } from \"./types\"\nimport { useCustomFetch } from \"./useCustomFetch\"\n\nexport function usePaginatedTransactions(): PaginatedTransactionsResult {\n  const { fetchWithCache, loading} = useCustomFetch()\n  const [paginatedTransactions, setPaginatedTransactions] = useState<PaginatedResponse<\n    Transaction[]\n  > | null>(null)\n\n  const fetchAll = useCallback(async () => {\n    const response = await fetchWithCache<PaginatedResponse<Transaction[]>, PaginatedRequestParams>(\n      \"paginatedTransactions\",\n      {\n        page: paginatedTransactions === null ? 0 : paginatedTransactions.nextPage,\n      }\n    )\n\n    console.log(caches.current)\n\n  \n\n    setPaginatedTransactions((previousResponse) => {\n    \n      if (response === null || previousResponse === null) {\n        return response\n      }\n\n      if (previousResponse !== null) {\n        response.data = previousResponse.data.concat(response.data)\n      }\n\n      return { data: response.data, nextPage: response.nextPage }\n    })\n  }, [fetchWithCache, paginatedTransactions])\n\n  const invalidateData = useCallback(() => {\n    setPaginatedTransactions(null)\n  }, [])\n\n  return { data: paginatedTransactions, loading, fetchAll, invalidateData }\n}\n"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAGA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,OAAO,SAASC,wBAAT,GAAiE;EAAA;;EACtE,MAAM;IAAEC,cAAF;IAAkBC;EAAlB,IAA6BH,cAAc,EAAjD;EACA,MAAM,CAACI,qBAAD,EAAwBC,wBAAxB,IAAoDN,QAAQ,CAExD,IAFwD,CAAlE;EAIA,MAAMO,QAAQ,GAAGR,WAAW,CAAC,YAAY;IACvC,MAAMS,QAAQ,GAAG,MAAML,cAAc,CACnC,uBADmC,EAEnC;MACEM,IAAI,EAAEJ,qBAAqB,KAAK,IAA1B,GAAiC,CAAjC,GAAqCA,qBAAqB,CAACK;IADnE,CAFmC,CAArC;IAOAC,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,OAAnB;IAIAR,wBAAwB,CAAES,gBAAD,IAAsB;MAE7C,IAAIP,QAAQ,KAAK,IAAb,IAAqBO,gBAAgB,KAAK,IAA9C,EAAoD;QAClD,OAAOP,QAAP;MACD;;MAED,IAAIO,gBAAgB,KAAK,IAAzB,EAA+B;QAC7BP,QAAQ,CAACQ,IAAT,GAAgBD,gBAAgB,CAACC,IAAjB,CAAsBC,MAAtB,CAA6BT,QAAQ,CAACQ,IAAtC,CAAhB;MACD;;MAED,OAAO;QAAEA,IAAI,EAAER,QAAQ,CAACQ,IAAjB;QAAuBN,QAAQ,EAAEF,QAAQ,CAACE;MAA1C,CAAP;IACD,CAXuB,CAAxB;EAYD,CAxB2B,EAwBzB,CAACP,cAAD,EAAiBE,qBAAjB,CAxByB,CAA5B;EA0BA,MAAMa,cAAc,GAAGnB,WAAW,CAAC,MAAM;IACvCO,wBAAwB,CAAC,IAAD,CAAxB;EACD,CAFiC,EAE/B,EAF+B,CAAlC;EAIA,OAAO;IAAEU,IAAI,EAAEX,qBAAR;IAA+BD,OAA/B;IAAwCG,QAAxC;IAAkDW;EAAlD,CAAP;AACD;;GArCehB,wB;UACqBD,c"},"metadata":{},"sourceType":"module"}